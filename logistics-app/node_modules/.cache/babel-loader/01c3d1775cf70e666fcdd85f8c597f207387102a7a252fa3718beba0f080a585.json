{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\"\n});\n\n// Attach token to every request if available\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth APIs\nexport const loginUser = credentials => API.post(\"/login\", credentials);\nexport const registerUser = data => API.post(\"/signup\", data);\n\n// Load management APIs\nexport const getAvailableLoads = () => API.get(\"/loads\");\nexport const getLoadById = id => API.get(`/loads/${id}`);\nexport const createLoad = loadData => API.post(\"/loads\", loadData);\nexport const updateLoad = (id, loadData) => API.put(`/loads/${id}`, loadData);\nexport const deleteLoad = id => API.delete(`/loads/${id}`);\nexport const getPostedLoadsByBroker = brokerId => API.get(`/loads/broker/${brokerId}`);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","loginUser","credentials","post","registerUser","data","getAvailableLoads","get","getLoadById","id","createLoad","loadData","updateLoad","put","deleteLoad","delete","getPostedLoadsByBroker","brokerId"],"sources":["S:/lorry/logistics-app/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n});\r\n\r\n// Attach token to every request if available\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Auth APIs\r\nexport const loginUser = (credentials) => API.post(\"/login\", credentials);\r\nexport const registerUser = (data) => API.post(\"/signup\", data);\r\n\r\n// Load management APIs\r\nexport const getAvailableLoads = () => API.get(\"/loads\");\r\nexport const getLoadById = (id) => API.get(`/loads/${id}`);\r\nexport const createLoad = (loadData) => API.post(\"/loads\", loadData);\r\nexport const updateLoad = (id, loadData) => API.put(`/loads/${id}`, loadData);\r\nexport const deleteLoad = (id) => API.delete(`/loads/${id}`);\r\nexport const getPostedLoadsByBroker = (brokerId) =>\r\n  API.get(`/loads/broker/${brokerId}`);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,SAAS,GAAIC,WAAW,IAAKb,GAAG,CAACc,IAAI,CAAC,QAAQ,EAAED,WAAW,CAAC;AACzE,OAAO,MAAME,YAAY,GAAIC,IAAI,IAAKhB,GAAG,CAACc,IAAI,CAAC,SAAS,EAAEE,IAAI,CAAC;;AAE/D;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,QAAQ,CAAC;AACxD,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAKpB,GAAG,CAACkB,GAAG,CAAC,UAAUE,EAAE,EAAE,CAAC;AAC1D,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IAAKtB,GAAG,CAACc,IAAI,CAAC,QAAQ,EAAEQ,QAAQ,CAAC;AACpE,OAAO,MAAMC,UAAU,GAAGA,CAACH,EAAE,EAAEE,QAAQ,KAAKtB,GAAG,CAACwB,GAAG,CAAC,UAAUJ,EAAE,EAAE,EAAEE,QAAQ,CAAC;AAC7E,OAAO,MAAMG,UAAU,GAAIL,EAAE,IAAKpB,GAAG,CAAC0B,MAAM,CAAC,UAAUN,EAAE,EAAE,CAAC;AAC5D,OAAO,MAAMO,sBAAsB,GAAIC,QAAQ,IAC7C5B,GAAG,CAACkB,GAAG,CAAC,iBAAiBU,QAAQ,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}